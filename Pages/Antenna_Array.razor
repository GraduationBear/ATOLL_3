@page "/antenna_array"
@inject Items Items
@inject AntennaArray antennaArray


@if (antennaArray.splited != null)
{   
    <nav>
        <ul class="navbar">
            <li><a style=@style1 @onclick="@(e => changeOnglet(e, 1))">Approach</a></li>
            <li><a style=@style2 @onclick="@(e => changeOnglet(e, 2))">Orbit</a></li>
        </ul>
    </nav>

    @if (this.onglet)
    {
        <div class="antenna-parameters">
        <div class="h1">
            <label>H1</label>
            <SfNumericTextBox TValue="double" Value="@antennaArray.Antenna1Height">
                
            </SfNumericTextBox>
            <select class="form-select" aria-label="Default select example">
              <option selected>@antennaArray.Antenna1Diagram</option>
                
            </select>
            <button class="btn btn-primary">Edit antenna</button>
        </div>
        <div class="h2">
            <label>H2</label>
            <SfNumericTextBox TValue="double" Value="@antennaArray.Antenna2Height" Enabled="false">
                
            </SfNumericTextBox>
            <select class="form-select" aria-label="Default select example" disabled>
              <option selected>@antennaArray.Antenna2Diagram</option>
              
            </select>
            <button class="btn btn-primary" disabled>Edit antenna</button>
        </div>
    </div>
    
    @if (antennaArray.NbAntennes % 2 == 0)
    {
        <div class="tableaux">
        <table class="tablecenterCSS table table-hover table-bordered">
            <thead >
                <tr>
                        @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                        {
                            <th>@antennaArray.AntennaLabels1[i]</th>
                        }
                </tr>
                <tr>
                    @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                    {
                        <th>@antennaArray.AntennaLabels2[i]</th>
                    }
                </tr>
            </thead>
        
            <tbody>
                <tr>
                @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                {
                    <td>@antennaArray.DeltaX[i]</td>
                }
                </tr>
                <tr>
                    @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                    {
                        <td>@antennaArray.DeltaY[i]</td>
                    }
                </tr>
                <tr>
                    @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                    {
                        <td>@antennaArray.DeltaZ[i]</td>
                    }
                </tr>
            </tbody>
        
        </table>
    <table class="tablecenterCSS table table-hover table-bordered">
        <tbody>
            <tr>
                @foreach(double s in antennaArray.AntennaSpacing)
                {
                    <td>@s</td>
                }
            </tr>
            <tr>
                 @foreach(bool s in antennaArray.HbuttonsState)
                {
                        @if (s)
                        {
                            <td>
                                <button class="btn btn-primary" >H1</button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <button class="btn btn-primary" disabled >H1</button>
                            </td>
                            
                        }
                    }
            </tr>
        </tbody>
    </table>

    <table class="tablecenterCSS table table-hover table-bordered">
            <thead >
                <tr>
                        @for(int i=antennaArray.NbAntennes-1; i >= antennaArray.NbAntennes/2; i--)
                        {
                            <th>@antennaArray.AntennaLabels1[i]</th>
                        }
                    
                </tr>
                <tr>
                    @for(int i=antennaArray.NbAntennes-1; i >= antennaArray.NbAntennes/2; i--)
                    {
                        <th>@antennaArray.AntennaLabels2[i]</th>
                    }
                </tr>
            </thead>
        
            <tbody>
                <tr>
                @for(int i=antennaArray.NbAntennes-1; i >= antennaArray.NbAntennes/2; i--)
                {
                    <td>@antennaArray.DeltaX[i]</td>
                }
                </tr>
                <tr>
                    @for(int i=antennaArray.NbAntennes-1; i >= antennaArray.NbAntennes/2; i--)
                    {
                        <td>@antennaArray.DeltaY[i]</td>
                    }
                </tr>
                <tr>
                    @for(int i=antennaArray.NbAntennes-1; i >= antennaArray.NbAntennes/2; i--)
                    {
                        <td>@antennaArray.DeltaZ[i]</td>
                    }
                </tr>
            </tbody>
        </table>
        </div>
    }
    else
    {   <div class="tableaux">
        <div class="contain-all">
            <div class="tableau-principal">
                <table class="tablecenterCSS table table-hover table-bordered">
                    <thead>
                        <tr>

                                @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                                {
                                    <th>@antennaArray.AntennaLabels1[i]</th>
                                }
                    
                        </tr>
                        <tr>
                            @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                            {
                                <th>@antennaArray.AntennaLabels2[i]</th>
                            }
                        </tr>
                    </thead>
        
                    <tbody>
                        <tr>
                        @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                        {
                            <td>@antennaArray.DeltaX[i]</td>
                        }
                        </tr>
                        <tr>
                            @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                            {
                                <td>@antennaArray.DeltaY[i]</td>
                            }
                        </tr>
                        <tr>
                            @for(int i=0; i < antennaArray.NbAntennes / 2; i++)
                            {
                                <td>@antennaArray.DeltaZ[i]</td>
                            }
                        </tr>
                    </tbody>
        
                </table>


            <table class="tablecenterCSS table table-hover table-bordered">
                <tbody>
                    <tr>
                        @foreach(double s in antennaArray.AntennaSpacing)
                        {
                            <td>@s</td>
                        }
                    </tr>
                    <tr>
                        @foreach(bool s in antennaArray.HbuttonsState)
                        {
                            @if (s)
                            {
                                <td>
                                    <button class="btn btn-primary" >H1</button>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <button class="btn btn-primary" disabled >H1</button>
                                </td>
                            
                            }
                        }
                    </tr>
                </tbody>
            </table>

            <table class="tablecenterCSS table table-hover table-bordered">
                    <thead >
                        <tr>
                                @for(int i=antennaArray.NbAntennes-1; i > antennaArray.NbAntennes/2; i--)
                                {
                                    <th>@antennaArray.AntennaLabels1[i]</th>
                                }
                    
                        </tr>
                        <tr>
                            @for(int i=antennaArray.NbAntennes-1; i > antennaArray.NbAntennes/2; i--)
                            {
                                <th>@antennaArray.AntennaLabels2[i]</th>
                            }
                        </tr>
                    </thead>
        
                    <tbody>
                        <tr>
                        @for(int i=antennaArray.NbAntennes-1; i > antennaArray.NbAntennes/2; i--)
                        {
                            <td>@antennaArray.DeltaX[i]</td>
                        }
                        </tr>
                        <tr>
                            @for(int i=antennaArray.NbAntennes-1; i > antennaArray.NbAntennes/2; i--)
                            {
                                <td>@antennaArray.DeltaY[i]</td>
                            }
                        </tr>
                        <tr>
                            @for(int i=antennaArray.NbAntennes-1; i > antennaArray.NbAntennes/2; i--)
                            {
                                <td>@antennaArray.DeltaZ[i]</td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        
            <div class="petit">
                <table class="tablecenterCSS table table-hover table-bordered">
                
                    <thead >
                        <tr>
                            <th>@antennaArray.AntennaLabels1[antennaArray.NbAntennes/2]</th>
                        </tr>
                        <tr>
                            <th>@antennaArray.AntennaLabels2[antennaArray.NbAntennes/2]</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@antennaArray.DeltaX[antennaArray.NbAntennes/2]</td>
                        </tr>
                        <tr>
                            <td>@antennaArray.DeltaY[antennaArray.NbAntennes/2]</td>
                        </tr>
                        <tr>
                                <td>@antennaArray.DeltaZ[antennaArray.NbAntennes/2]</td>
                        </tr>
                    <tr>
                            @if (antennaArray.HbuttonsState[antennaArray.HbuttonsState.Count() - 1])
                            {
                                <td><button class="btn btn-primary">H1</button></td>
                            }else{

                                <td><button class="btn btn-primary" disabled>H1</button></td>
                            }

                    </tr>
                </tbody>
            </table>
            </div>
            
        </div>
        </div>
    }
    

    <div class="bottom-page-1">
        <div>
            <label>Antenna Rotation :</label>
            <SfNumericTextBox Width="200px" TValue="double" Value="@antennaArray.AntennaRotation">
            </SfNumericTextBox>
        </div>
        <div>
            <label>Array Y offset :</label>
            <SfNumericTextBox Width="200px" TValue="double" Value="@antennaArray.ArrayYoffset">
            </SfNumericTextBox>
        </div>
        
        </div>
    }
    else
    {
        
    }



    @foreach (string split in antennaArray.splited)
    {   

        <p>[@antennaArray.splited.IndexOf(split)] @split</p>
    }
    
}

@code{


    private bool onglet = true;
    private string style1 = "background-color: rgba(30, 30, 30, 0.7)";
    private string style2 = "background-color: rgba(30, 30, 30, 0.1)";

    private void changeOnglet(MouseEventArgs e,int number)
    {
        if (this.onglet)
        {
            if (number == 2)
            {
                this.style1 = "background-color: rgba(30, 30, 30, 0.1)";
                this.style2 = "background-color: rgba(30, 30, 30, 0.7)";
                this.onglet =! this.onglet;
            }

        }else{

            if(number == 1)
            {
                this.style1 = "background-color: rgba(30, 30, 30, 0.7)";
                this.style2 = "background-color: rgba(30, 30, 30, 0.1)";
                this.onglet =! this.onglet;
            }
            
        }
        
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();
        //Pour chaque item de la TreeView
        foreach (Item item in Items.list)
        {
            //si l'item est selectionné
            if (item.selected == true)
            {
                //On lit le fichier correspondant
                antennaArray.SetAntennaArray(System.IO.File.ReadAllText(item.path));
                //Et on sors de la boucle
                break;
            }
        }
    }
}